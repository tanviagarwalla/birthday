{"version":3,"sources":["components/NickFury.jsx","components/Welcome.jsx","components/Intro.jsx","components/Progress.jsx","App.js","serviceWorker.js","index.js","media/nf.png","media/Background_08.mov"],"names":["NickFury","className","src","nf","Component","Welcome","this","typed","Typed","el","strings","startDelay","typeSpeed","backSpeed","cursorChar","destroy","style","fontSize","height","whiteSpace","ref","Button","basic","color","onClick","props","handleClick","React","Intro","state","index","messageList","buttonLabels","position","opacity","width","border","padding","clickHandler","ProgressBar","increment","setState","prevState","percent","Progress","progress","indicating","size","App","handleReady","ready","showIntro","handleIntroClicks","introIndex","showProgressBar","Grid","Row","only","playsInline","autoPlay","muted","loop","id","video","columns","centered","Column","margin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.3fc8e386.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport nf from '../media/nf.png'\n\nexport default class NickFury extends Component {\n    render() {\n        return (\n            <div className=\"nick-fury box bounce-1\">\n                <img src={nf}/>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Typed from 'typed.js';\nimport { Button } from 'semantic-ui-react'\nimport '../App.css';\n\nclass Welcome extends React.Component {\n  componentDidMount() {\n    const options = {\n      strings: ['Hello Swetik Sheth', \"You have 1 confidential message(s) waiting\"],\n      startDelay: 500,\n      typeSpeed: 100,\n      backSpeed: 80,\n      cursorChar: \"|\",\n    };\n    // this.el refers to the <span> in the render() method\n    this.typed = new Typed(this.el, options);\n  }\ncomponentWillUnmount() {\n    // Please don't forget to cleanup animation layer\n    this.typed.destroy();\n  }\n  \n  render() {\n    return (\n        <div className=\"wrap center\" style={{fontSize: \"50px\", height: \"100vh\"}}>\n          <div className=\"type-wrap\">\n            <span\n                style={{ whiteSpace: 'pre' }}\n                ref={(el) => { this.el = el; }}\n            />\n          </div>\n          <div className=\"welcome-buttons\">\n            <span className=\"welcome-buttons\">\n              <Button basic color='black' onClick={this.props.handleClick}>Proceed</Button>\n            </span>\n          </div>   \n        </div>\n    );\n  }\n}\nexport default Welcome;","import React from \"react\";\nimport { Button } from 'semantic-ui-react'\nimport '../App.css';\nimport '../vov.min.css';\n\nclass Intro extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0,\n            messageList : [<p>Hi Agent Sheth, <br/><br/> I'm Nick Fury and I need your help. </p> , \n            <p>The Avengers are busy fighting bigger battles in Space and I need your help saving Earth. <br/><br/> Will you help me by completing a few challenges?</p>, \n            <p>Saving lives is a dangerous business.<br/><br/> Are you sure you want to do this?</p>,\n            <p>You can track your progress with the progress bar at the bottom of the screen. </p>,\n            <p> Don't worry, you will be rewarded for your efforts. <br/><br/> Let's begin. </p>],\n            buttonLabels : ['I want to help', 'Yes!', \"YES\", \"Got it.\", \"Start\"]\n        };\n    }\n    \n    render() {\n        return (\n            <div className=\"wrap center vov fade-in\" style={{fontSize: \"25px\", height: \"80vh\", position: \"relative\", opacity: '0.85'}}>\n                <div style={{'background-color': 'black', 'text-align': 'left', color: 'green', height: '400px', width: '650px', border: 'solid grey 10px','border-radius': '25px', padding: '40px'}}>\n                    <div style={{height: '80%'}}>\n                        {this.state.messageList[this.props.index]}\n                    </div>\n                    <div> \n                        <Button basic color='green' onClick={this.props.clickHandler}>{this.state.buttonLabels[this.props.index]}</Button>\n                    </div>  \n                </div> \n            </div>\n        );\n    }\n}\nexport default Intro;","import React, { Component } from 'react'\nimport { Progress } from 'semantic-ui-react'\nimport '../App.css';\n\nexport default class ProgressBar extends Component {\n\n  increment = () =>\n    this.setState((prevState) => ({\n      percent: prevState.percent >= 100 ? 0 : prevState.percent + 20,\n    }))\n\n  render() {\n    return (\n      <div className=\"progress-bar\">\n        <Progress percent={this.props.progress} progress indicating size=\"large\" />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport NickFury from './components/NickFury.jsx';\nimport Welcome from './components/Welcome.jsx';\nimport 'semantic-ui-css/semantic.min.css';\nimport video from './media/Background_08.mov';\nimport Intro from './components/Intro'\nimport ProgressBar from './components/Progress'\nimport { Grid } from 'semantic-ui-react'\nimport './vov.min.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {ready: false, introIndex : 0, showProgressBar: false, progress: 0};\n  }\n  \n  handleReady = () => {\n    this.setState({ready: true});\n    this.setState({showIntro: true});\n  }\n\n  handleIntroClicks = () => {\n    let index = this.state.introIndex;\n    if( index === 2) {\n      this.setState({showProgressBar: true, progress: 50, introIndex: index + 1});\n    } else if (index === 4) {\n\n    } else {\n      this.setState({introIndex: index + 1});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Grid>\n          <Grid.Row only=\"computer tablet\">\n          <div className=\"body\" style={{height:'100vh', width:'100vw'}}>\n            {/* Welcome message */}\n            {!this.state.ready && <Welcome handleClick={this.handleReady}/>}\n            {/* Video background */}\n            {this.state.ready && <video playsInline autoPlay muted loop id=\"bgvid\" src={video}/>}\n\n            {this.state.ready && <Grid columns=\"equal\">\n              <Grid.Row centered>\n              {this.state.showIntro && <Intro index={this.state.introIndex} clickHandler={this.handleIntroClicks} />}\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  {/* Nick Fury */}\n                  {this.state.ready && <div className=\"vov fade-in\">\n                    <NickFury/>\n                    </div>}\n                </Grid.Column>\n                <Grid.Column>\n                  {this.state.showProgressBar && <div className=\"vov slide-in-up\"><ProgressBar progress={this.state.progress}/></div>}\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>}\n          </div>\n          </Grid.Row>\n        </Grid>\n        <Grid>\n          <Grid.Row only=\"mobile\">\n            <h2 style={{margin: '20px'}}>This website is only meant to be used on computer screens. At worst, tablets</h2>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/nf.cd5bfed7.png\";","module.exports = __webpack_public_path__ + \"static/media/Background_08.d431923b.mov\";"],"sourceRoot":""}