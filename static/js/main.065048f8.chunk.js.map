{"version":3,"sources":["components/NickFury.jsx","components/Welcome.jsx","components/Intro.jsx","components/Progress.jsx","components/Profile.jsx","components/Challenge.jsx","components/Stats.jsx","App.js","serviceWorker.js","index.js","media/nf.png","media/Background_08.mov","media/profilepix.jpeg"],"names":["NickFury","className","src","nf","Component","Welcome","this","typed","Typed","el","strings","startDelay","typeSpeed","backSpeed","cursorChar","destroy","style","whiteSpace","ref","Button","basic","color","onClick","props","handleClick","React","Intro","state","messageList","buttonLabels","index","clickHandler","ProgressBar","increment","setState","prevState","percent","Progress","progress","indicating","size","extra","List","Item","icon","content","href","Profile","Card","image","img","header","meta","description","Challenge","subheader","width","Grid","Row","columns","Column","class","hideButtons","Popup","trigger","items","key","label","value","Stats","Statistic","Group","App","handleReady","ready","showIntro","handleIntroClicks","introIndex","showProgressBar","setBackgroundColor","handleChallengeComplete","challengeIndex","hideChallengeButtons","bgColor","showVideo","only","playsInline","autoPlay","muted","loop","id","video","centered","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.065048f8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport nf from '../media/nf.png'\n\nexport default class NickFury extends Component {\n    render() {\n        return (\n            <div className=\"nick-fury box bounce-1\">\n                <img src={nf}/>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Typed from 'typed.js';\nimport { Button } from 'semantic-ui-react'\nimport '../App.css';\n\nclass Welcome extends React.Component {\n  componentDidMount() {\n    const options = {\n      strings: ['Hello Swetik Sheth', \"You have 1 confidential message(s) waiting\"],\n      startDelay: 500,\n      typeSpeed: 100,\n      backSpeed: 80,\n      cursorChar: \"|\",\n    };\n    // this.el refers to the <span> in the render() method\n    this.typed = new Typed(this.el, options);\n  }\ncomponentWillUnmount() {\n    // Please don't forget to cleanup animation layer\n    this.typed.destroy();\n  }\n  \n  render() {\n    return (\n        <div className=\"welcome-message center\">\n          <div>\n            <span\n                style={{ whiteSpace: 'pre' }}\n                ref={(el) => { this.el = el; }}\n            />\n          </div>\n          <div className=\"welcome-buttons\">\n            <span className=\"welcome-buttons\">\n              <Button basic color='black' onClick={this.props.handleClick}>Proceed</Button>\n            </span>\n          </div>   \n        </div>\n    );\n  }\n}\nexport default Welcome;","import React from \"react\";\nimport { Button } from 'semantic-ui-react'\nimport '../App.css';\nimport '../vov.min.css';\n\nclass Intro extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            messageList : [<p>Agent Sheth, <br/><br/> I'm Nick Fury and I'm here to recruit you to join the Avengers. </p> , \n            <p>Hold up! It's not that easy. <br/><br/> You will first have to go through our rigorous Hero training program.</p>, \n            <p>Saving lives is a dangerous business.<br/><br/> Are you sure you want to do this?</p>,\n            <p>You can track your progress with the progress bar at the bottom of the screen. </p>,\n            <p> Don't worry, you will be rewarded for your efforts. <br/><br/> Let's begin. </p>],\n            buttonLabels : ['Proceed', 'Okay', \"YES\", \"Okay\", \"Start\"]\n        };\n    }\n    \n    render() {\n        return (\n            <div className=\"intro center vov fade-in\">\n                <div className=\"intro-screen\">\n                    <div className=\"intro-message\">\n                        {this.state.messageList[this.props.index]}\n                    </div>\n                    <div> \n                        <Button className=\"intro-button\" basic color='green' onClick={this.props.clickHandler}>{this.state.buttonLabels[this.props.index]}</Button>\n                    </div>  \n                </div>\n            </div>\n        );\n    }\n}\nexport default Intro;","import React, { Component } from 'react'\nimport { Progress } from 'semantic-ui-react'\nimport '../App.css';\n\nexport default class ProgressBar extends Component {\n\n  increment = () =>\n    this.setState((prevState) => ({\n      percent: prevState.percent >= 100 ? 0 : prevState.percent + 20,\n    }))\n\n  render() {\n    return (\n      <div className=\"progress-bar\">\n        <Progress percent={this.props.progress} progress indicating size=\"large\"/>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Card, List } from 'semantic-ui-react'\nimport img from '../media/profilepix.jpeg'\n\nconst extra = (\n  <List>\n    <List.Item icon='marker' content='Kolkata, India' />\n    <List.Item\n      icon='mail'\n      content={<a href='#'>swetiksheth@gmail.com</a>}\n    />\n    <List.Item\n      icon='linkify'\n      content={<a href='#'>Resume</a>}\n    />\n  </List>\n)\n\nconst Profile = () => (\n  <Card\n    className=\"profile-card\"\n    image={img}\n    header='Swetik Sheth'\n    meta='Recruit'\n    description={extra}\n  />\n)\n\nexport default Profile","import React from \"react\";\nimport { Button, Grid, Popup } from 'semantic-ui-react'\nimport '../App.css';\nimport '../vov.min.css';\nimport Profile from './Profile.jsx'\n\nclass Challenge extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            messageList : [\n                <p className=\"challenge-description\">\n                    Time to get fit! <br/><br/>\n                    As an Avenger, your super powers are not enough.<br/><br/>\n                    You need to train to increase your strength, flexibility and stamina. <br/><br/>\n                    Attempt the handstand challenge and send video proof to Agent Agarwalla.\n                </p> , \n                <p className=\"challenge-description\">\n                    Well done on the first challenge!<br/><br/> \n                    As an Avenger, you are not only expected to save the world but also entertain it. <br/> <br/>\n                    To prove that you can hold the attention of the masses make a recording of yourself doing the Gangnam Style dance. <br/><br/>\n                    Send a video recording to Agent Agarwalla.\n                </p>, \n                <p className=\"challenge-description\">\n                    That was not your best performance so I hope you will do better in the next few challenges<br/><br/> \n                    As an Avenger,  you must have brain with brawn. <br/><br/>\n                    Challenge TBD <br/><br/>\n                    Send a video recording to Agent Agarwalla.\n                </p>, \n                <p className=\"challenge-description\">\n                    Finally, your last challenge.<br/><br/> \n                    As an Avenger, it is not only important to be brave and smart but also to be able to love and empathize.<br/><br/>\n                    Write a Haiku for your one true love. <br/><br/>\n                    Send it to Agent Agarwalla for verification.\n                </p>,\n                <p className=\"challenge-description\">\n                    Welcome to the Avengers. <br/> <br/>\n                    We're all very excited to have you join the team. <br/><br/>\n                    Please contact Agent Agarwalla for the next steps. <br/><br/>\n                    I hope we're not wrong about you.\n                </p>\n            ],\n            subheader : ['Fitness', 'Entertainment', \"Intelligence Quotient\", \"Emotional Quotient\"],\n            header: [\"Challenge 1\", \"Challenge 2\", \"Challenge 3\", \"Challenge 4\", \"Congratulations!\"]\n        };\n    }\n    \n    render() {\n        return (\n            <div className=\"challenge-container vov fade-in\" style={{width: '100%'}}>\n                <Grid>\n                    <Grid.Row columns=\"equal\">\n                        <Grid.Column width={5}>\n                            <Profile></Profile>\n                        </Grid.Column>\n                        <Grid.Column width={7}>\n                            <div className=\"challenge-holder\">\n                                <h1 className=\"ui header\" style={{color: '#e07a5f'}}>\n                                    {this.state.header[this.props.index]}\n                                    <div class=\"sub header\">{this.state.subheader[this.props.index]}</div>\n                                </h1>\n                                {this.state.messageList[this.props.index]}\n                                { !this.props.hideButtons  && <div className=\"challenge-buttons\">\n                                    <Button basic color='green' onClick={this.props.clickHandler}>\n                                        Challenge Complete\n                                    </Button>\n                                    <Popup \n                                    content=\"Sorry, that's not allowed.\" \n                                    trigger={\n                                        <Button basic color='red'>\n                                            I give up\n                                        </Button>\n                                    } />\n                                </div>}\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        );\n    }\n}\nexport default Challenge;","import React from 'react'\nimport { Statistic } from 'semantic-ui-react'\n\nconst items = [\n  { key: 'strength', label: 'Strength', value: '78.4%' },\n  { key: 'cuteness', label: 'Cuteness', value: '100%' },\n]\n\nconst Stats = () => <Statistic.Group className=\"stats\" items={items} />\n\nexport default Stats;","import React, { Component } from 'react';\nimport './App.css';\nimport NickFury from './components/NickFury.jsx';\nimport Welcome from './components/Welcome.jsx';\nimport 'semantic-ui-css/semantic.min.css';\nimport video from './media/Background_08.mov';\nimport Intro from './components/Intro'\nimport ProgressBar from './components/Progress'\nimport { Grid } from 'semantic-ui-react'\nimport Challenge from './components/Challenge'\nimport './vov.min.css';\nimport Stats from './components/Stats'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {ready: false, introIndex : 0, showProgressBar: false, progress: 0, showVideo: false, bgColor: 'white', challengeIndex : 0, hideChallengeButtons: false};\n  }\n  \n  handleReady = () => {\n    this.setState({ready: true, showIntro: true});\n  }\n\n  handleIntroClicks = () => {\n    let index = this.state.introIndex;\n    if( index === 2) {\n      this.setState({showProgressBar: true, progress: 50, introIndex: index + 1});\n    } else if (index === 4) {\n      this.setBackgroundColor('black');\n      this.setState({showIntro: false, progress: 0});\n    } else {\n      this.setState({introIndex: index + 1});\n    }\n  }\n\n  handleChallengeComplete = () => {\n    let index = this.state.challengeIndex;\n    let progress = this.state.progress;\n    if (index  < 3) {\n      this.setState({challengeIndex : index + 1, progress : progress + 25});\n    } else {\n      this.setState({challengeIndex : index + 1, hideChallengeButtons : true, progress : progress + 25})\n    }\n  }\n\n  setBackgroundColor = (color) => {\n    this.setState({bgColor: 'gradient1'});\n  }\n\n  render() {\n    return (\n      <div>\n        <Grid>\n          <Grid.Row only=\"mobile tablet\">\n            <h2 className=\"mobile\">This website is only meant to be used on computer screens. Responsive design is a feature enhancement we are considering for future releases. Thank you for your patience!</h2>\n          </Grid.Row>\n        </Grid>\n        <Grid>\n          <Grid.Row only=\"computer\" className={this.state.bgColor}>\n          <div className=\"body\">\n            {/* Welcome message */}\n            {!this.state.ready && <Welcome handleClick={this.handleReady}/>}\n\n            {/* Video background */}\n            {this.state.showIntro && <video playsInline autoPlay muted loop id=\"bgvid\" src={video}/>}\n\n            {this.state.ready && <Grid columns=\"equal\">\n              {this.state.showIntro && <Grid.Row centered>\n                 <Intro index={this.state.introIndex} clickHandler={this.handleIntroClicks} />\n                \n              </Grid.Row>}\n              {!this.state.showIntro && <Grid.Row>\n                <Challenge index={this.state.challengeIndex} clickHandler = {this.handleChallengeComplete} hideButtons = {this.state.hideChallengeButtons} />\n              </Grid.Row>}\n              <Grid.Row>\n                {!this.state.showIntro && this.state.ready && <div className=\"stats-bar\">\n                  <Stats/>\n                </div>}\n                <Grid.Column>\n                  {/* Nick Fury */}\n                    <div className=\"vov fade-in\">\n                      <NickFury/>\n                    </div>\n                </Grid.Column>\n                <Grid.Column>\n                  {this.state.showProgressBar && <div className=\"vov slide-in-up\"><ProgressBar progress={this.state.progress}/></div>}\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>}\n          </div>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/nf.cd5bfed7.png\";","module.exports = __webpack_public_path__ + \"static/media/Background_08.d431923b.mov\";","module.exports = __webpack_public_path__ + \"static/media/profilepix.6ec8a67f.jpeg\";"],"sourceRoot":""}